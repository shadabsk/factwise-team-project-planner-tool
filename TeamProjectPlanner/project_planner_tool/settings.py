"""
Django settings for TeamProjectPlanner project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = (
    'django-insecure-5%ta@5=&_efrri+iz=$0vut3ybxk5!c0gvvpcam9dqs5)8h&ce'
)

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'rest_framework',

    'app_users',
    'app_auth',
    'app_teams',
    'app_boards',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'project_planner_tool.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'project_planner_tool.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# NOTE: As per the requirement, won't be using any sql models
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }


TOKEN_FILE = "db/auth_tokens.json"
USER_FILE = "db/users.json"
TEAM_FILE = "db/teams.json"
BOARD_FILE = "db/boards.json"
TASK_FILE = "db/tasks.json"


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': (
            'django.contrib.auth.password_validation.'
            'UserAttributeSimilarityValidator'
        ),
    },
    {
        'NAME': (
            'django.contrib.auth.password_validation.MinimumLengthValidator'
        ),
    },
    {
        'NAME': (
            'django.contrib.auth.password_validation.CommonPasswordValidator'
        ),
    },
    {
        'NAME': (
            'django.contrib.auth.password_validation.NumericPasswordValidator'
        ),
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

TASK_STATUS_CHOICES = [
    "OPEN",
    "IN_PROGRESS",
    "COMPLETE",
]

BOARD_STATUS_CHOICES = ["CLOSED"]

RESPONSE_MSG_CONSTANTS_DICT = {
    'INVALID_CRED': 'Invalid credentials',
    'UNAME_EXIST': 'Username already exists.',
    'ADMIN_EXIST': 'Admin user already exists.',
    'USER_NOT_FOUND': 'User not found',
    'DENY': 'Permission denied',
    'UNAUTH': 'Unauthorized',
    'ONLY_ADMIN_RESTRICT_TEAM': 'Only admin can create teams',
    'TEAM_NOT_FOUND': 'Team not found',
    'TEAM_NAME_UNIQUE': 'Team name must be unique.',
    'ADMIN_NOT_EXIST': 'Admin user does not exist.',
    'USER_NOT_EXIST': 'User {} does not exist',
    'UNIQUE_TEAM_NAME': 'Team name must be unique',
    'UNIQUE_BOARD': 'Board name must be unique within the team.',
    'TASK_TITLE_UNIQUE': 'Task title already exists in this board.',
    'ONLY_ADMIN_RESTRICT_BOARDS': 'Only admin can create boards',
    'BOARD_NOT_FOUND': 'Board not found',
    'BOARD_CLOSED': 'Board is already closed',
    'BOARD_NOT_CLOSED': (
        'Cannot close board. There are tasks not marked as '
        f'{TASK_STATUS_CHOICES[2]}'
    ),
    'TASK_CANT_ADD': 'Cannot add task to CLOSED board',
    'TEAM_NOT_FOUND_IN_BOARD': 'Associated team for this board not found',
    'USER_NOT_IN_TEAM': 'Only team members can add tasks to this board',
    'ASSIGNED_USER_NOT_IN_TEAM': 'Assigned user is not in the boards team',
    'TASK_NOT_FOUND': 'Task not found',
}

EXPORT_DIR = "out"
